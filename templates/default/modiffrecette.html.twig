{% extends 'base.html.twig' %}

{% block title %}Modifier Recette{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <h1 class="h3 mb-3 font-weight-normal text-center">Modifier la recette</h1>

                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}

                <div class="form-group">
                    {{ form_label(form.nom) }}
                    {{ form_widget(form.nom, {'attr': {'class': 'form-control'}}) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.nom) }}
                    </div>
                </div>

                <div class="form-group">
                    {{ form_label(form.description) }}
                    {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.description) }}
                    </div>
                </div>

                <div class="form-group">
                    {{ form_label(form.instructions) }}
                    {{ form_widget(form.instructions, {'attr': {'class': 'form-control'}}) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.instructions) }}
                    </div>
                </div>

                <div class="form-group">
                    {{ form_label(form.tempsPreparation) }}
                    {{ form_widget(form.tempsPreparation, {'attr': {'class': 'form-control'}}) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.tempsPreparation) }}
                    </div>
                </div>

                <div class="form-group">
                    {{ form_label(form.tempsCuisson) }}
                    {{ form_widget(form.tempsCuisson, {'attr': {'class': 'form-control'}}) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.tempsCuisson) }}
                    </div>
                </div>

                <div class="form-group">
                    {{ form_label(form.imageFile) }}
                    {{ form_widget(form.imageFile, {'attr': {'class': 'form-control-file'}}) }}
                    <div class="invalid-feedback">
                        {{ form_errors(form.imageFile) }}
                    </div>
                </div>

                <div class="form-group">
                    {{ form_label(form.produits) }}
                    <div class="row">
                        {% for produit in form.produits %}
                            <div class="col-md-4">
                                <div class="form-check">
                                    {{ form_widget(produit, {'attr': {'class': 'form-check-input'}}) }}
                                    {{ form_label(produit) }}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                    <div class="invalid-feedback">
                        {{ form_errors(form.produits) }}
                    </div>
                </div>

                {% if app.user %}
                    <button type="submit" class="btn btn-lg btn-primary btn-block">Enregistrer les modifications</button>
                {% else %}
                    <p class="text-center">Veuillez <a href="{{ path('app_login') }}">vous connecter</a> pour modifier une recette.</p>
                {% endif %}

                {{ form_end(form) }}
            </div>
        </div>
    </div>

    <script>
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
{% endblock %}
